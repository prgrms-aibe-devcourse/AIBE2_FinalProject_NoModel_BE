version: '3.8'

services:
  # InfluxDB v1.8 for k6 metrics (k6 native support)
  influxdb:
    image: influxdb:1.8
    container_name: influxdb-k6
    ports:
      - "8086:8086"
    networks:
      - monitoring
    volumes:
      - influxdb_data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_USER=k6
      - INFLUXDB_USER_PASSWORD=k6
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
    restart: unless-stopped

  # k6 Performance Testing Tool
  k6:
    image: grafana/k6:latest
    container_name: k6-performance
    networks:
      - monitoring
    volumes:
      - ./k6:/scripts
      - ./k6/results:/results
    environment:
      - K6_INFLUXDB_USERNAME=k6
      - K6_INFLUXDB_PASSWORD=k6
    command: run --out influxdb=http://influxdb:8086/k6 /scripts/load-test.js
    depends_on:
      - influxdb
    profiles:
      - test

  # Prometheus Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-metrics
    ports:
      - "9090:9090"
    networks:
      - monitoring
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped

  # Grafana Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-dashboard
    ports:
      - "3000:3000"
    networks:
      - monitoring
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    depends_on:
      - prometheus

  # Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - monitoring
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.cpu'
      - '--collector.meminfo'
      - '--collector.filesystem'
      - '--collector.diskstats'
      - '--collector.netdev'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped

  # Loki for Log Aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: loki-server
    ports:
      - "3100:3100"
    networks:
      - monitoring
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  # Promtail for Log Collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail-agent
    ports:
      - "9080:9080"
    networks:
      - monitoring
    volumes:
      - ./monitoring/loki/promtail-config.yml:/etc/promtail/config.yml
      - ./logs:/logs:ro
      - /var/log:/host/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped

networks:
  monitoring:
    driver: bridge
    name: monitoring-network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  influxdb_data:
    driver: local
  loki_data:
    driver: local